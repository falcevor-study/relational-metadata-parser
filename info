minidom

dbd$datatypes - доступные типы данных..

<schema>
    <domens>
        <domen имя, тип, размер, точность....>
    </domens>
    <tables>
        <table имя, операции, поля>
            <field имя, тип(домен), атрибуты>             //Ссылка на домен "domain"="имя"
            <index ["name"=...] field='имя'>
                <item value='имя или выражение'>          //если составной или функциональный индекс
            </index>
            <constraint [name] kind=, {reference|constraint} props       (reference - если задается имя таблицы, на первичный ключ которой мы ссылаемся, constraint - если задается первичный или уникальный ключ, на который задается ссылка). Принцип каскадного удаления.
                <item value='имя или выражение'>
            </constraint>
         </table>
    </tables>

Построить в ОЗУ набор объектов, которые соответсвуют каждому из тегов. А затем преобразовать в реляционное представление.
При реализации связи "один ко многим" создаем ссылку на контейнер, а в контейнере коллекцию ссылок элементов.
В деталях индексов и ограничений хранить не сслыки на объекты полей, а их имена.
Не делать большое количество запросов по ключу. Стандартный способ решения такого рода задач: временная таблица.

Первые 2 задания до 21 октября.
