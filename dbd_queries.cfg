########################################################################################################################

[UPLOADING]

########################################################################################################################

# Запрос для выгрузки записей во временный источник схем.
schema:
    INSERT INTO schemas (
         name
        ,fulltext_engine
        ,version
        ,description
    )
    VALUES (
         :name
        ,:fulltext_engine
        ,:version
        ,:description
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник доменов.
domain :
    INSERT INTO domains (
         name
        ,description
        ,data_type_name
        ,length
        ,char_length
        ,precision
        ,scale
        ,width
        ,align
        ,show_null
        ,show_lead_nulls
        ,thousands_separator
        ,summable
        ,case_sensitive
        ,uuid
    )
    VALUES (
         :name
        ,:description
        ,:data_type_name
        ,:length
        ,:char_length
        ,:precision
        ,:scale
        ,:width
        ,:align
        ,:show_null
        ,:show_lead_nulls
        ,:thousands_separator
        ,:summable
        ,:case_sensitive
        ,:uuid
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник таблиц.
table :
    INSERT INTO tables (
         schema_name
        ,name
        ,description
        ,can_add
        ,can_edit
        ,can_delete
        ,temporal_mode
        ,means
        ,uuid
    )
    VALUES (
         :schema_name
        ,:name
        ,:description
        ,:can_add
        ,:can_edit
        ,:can_delete
        ,:temporal_mode
        ,:means
        ,:uuid
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник полей.
field :
    INSERT INTO fields (
         table_name
        ,position
        ,name
        ,russian_short_name
        ,description
        ,domain_name
        ,can_input
        ,can_edit
        ,show_in_grid
        ,show_in_details
        ,is_mean
        ,autocalculated
        ,required
        ,uuid
    )
    VALUES (
         :table_name
        ,:position
        ,:name
        ,:russian_short_name
        ,:description
        ,:domain_name
        ,:can_input
        ,:can_edit
        ,:show_in_grid
        ,:show_in_details
        ,:is_mean
        ,:autocalculated
        ,:required
        ,:uuid
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник ограничений.
constraint:
    INSERT INTO constraints (
         id
        ,table_name
        ,name
        ,constraint_type
        ,reference
        ,unique_key_name
        ,has_value_edit
        ,cascading_delete
        ,expression
        ,uuid
    )
    VALUES (
         :id
        ,:table_name
        ,:name
        ,:constraint_type
        ,:reference
        ,:unique_key_name
        ,:has_value_edit
        ,:cascading_delete
        ,:expression
        ,:uuid
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник деталей ограничений.
constraint_detail:
    INSERT INTO constraint_details (
         constraint_id
        ,position
        ,field_name
    )
    VALUES (
         :constraint_id
        ,:position
        ,:field_name
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник индексов.
index:
    INSERT INTO indices (
         id
        ,table_name
        ,name
        ,local
        ,kind
        ,uuid
    )
    VALUES (
         :id
        ,:table_name
        ,:name
        ,:local
        ,:kind
        ,:uuid
    )

########################################################################################################################

# Запрос для выгрузки записей во временный источник деталей индексов.
index_detail:
    INSERT INTO index_details (
         index_id
        ,position
        ,field_name
        ,expression
        ,descend
    )
    VALUES (
         :index_id
        ,:position
        ,:field_name
        ,:expression
        ,:descend
    )

########################################################################################################################

[PROCESSING]

########################################################################################################################

# Скрипт, выполняющий переливку данных из временных источников в основные.
fill_main_tables:
    BEGIN TRANSACTION;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу схем.
    INSERT INTO dbd$schemas (
         name
        ,fulltext_engine
        ,version
        ,description
    )
    SELECT
         sch.name
        ,sch.fulltext_engine
        ,sch.version
        ,sch.description
    FROM schemas AS sch;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу доменов.
    INSERT INTO dbd$domains (
         name
        ,description
        ,data_type_id
        ,length
        ,char_length
        ,precision
        ,scale
        ,width
        ,align
        ,show_null
        ,show_lead_nulls
        ,thousands_separator
        ,summable
        ,case_sensitive
        ,uuid
    )
    SELECT
         dom.name
        ,dom.description
        ,type.id
        ,dom.length
        ,dom.char_length
        ,dom.precision
        ,dom.scale
        ,dom.width
        ,dom.align
        ,dom.show_null
        ,dom.show_lead_nulls
        ,dom.thousands_separator
        ,dom.summable
        ,dom.case_sensitive
        ,dom.uuid
    FROM domains        AS dom
    JOIN dbd$data_types AS type
        ON  1=1
        AND dom.data_type_name = type.type_id;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу сущностей.
    INSERT INTO dbd$tables (
         schema_id
        ,name
        ,description
        ,can_add
        ,can_edit
        ,can_delete
        ,temporal_mode
        ,means
        ,uuid
    )
    SELECT
         sch.id
        ,tab.name
        ,tab.description
        ,tab.can_add
        ,tab.can_edit
        ,tab.can_delete
        ,tab.temporal_mode
        ,tab.means
        ,tab.uuid
    FROM tables  AS tab
    JOIN dbd$schemas AS sch
        ON tab.schema_name = sch.name;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу полей.
    INSERT INTO dbd$fields (
         table_id
        ,position
        ,name
        ,russian_short_name
        ,description
        ,domain_id
        ,can_input
        ,can_edit
        ,show_in_grid
        ,show_in_details
        ,is_mean
        ,autocalculated
        ,required
        ,uuid
    )
    SELECT
         tab.id
        ,fld.position
        ,fld.name
        ,fld.russian_short_name
        ,fld.description
        ,dom.id
        ,fld.can_input
        ,fld.can_edit
        ,fld.show_in_grid
        ,fld.show_in_details
        ,fld.is_mean
        ,fld.autocalculated
        ,fld.required
        ,fld.uuid
    FROM fields      AS fld
    JOIN dbd$tables  AS tab
        ON fld.table_name = tab.name
    JOIN dbd$domains  AS dom
        ON fld.domain_name = dom.name;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу ограничений.
    INSERT INTO dbd$constraints (
         table_id
        ,name
        ,constraint_type
        ,reference
        ,unique_key_id
        ,has_value_edit
        ,cascading_delete
        ,expression
        ,uuid
    )
    SELECT
         tab.id
        ,con.name
        ,con.constraint_type
        ,refer.id
        ,con.unique_key_name
        ,con.has_value_edit
        ,con.cascading_delete
        ,con.expression
        ,con.uuid
    FROM constraints AS con
    JOIN dbd$tables  AS tab
        ON con.table_name = tab.name
    LEFT JOIN dbd$tables  AS refer
        ON con.reference = refer.name;

    -- Переопределение ссылок на другое ограничение. (изначально адресация производится по uuid)
    UPDATE dbd$constraints
    SET unique_key_id = (
            SELECT
                id
            FROM dbd$constraints AS A
            WHERE dbd$constraints.unique_key_id = A.uuid
        );


    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основую таблицу индексов.
    INSERT INTO dbd$indices (
         table_id
        ,name
        ,local
        ,kind
        ,uuid
    )
    SELECT
         tab.id
        ,ind.name
        ,ind.local
        ,ind.kind
        ,ind.uuid
    FROM indices    AS ind
    JOIN dbd$tables AS tab
        ON ind.table_name = tab.name;

    --------------------------------------------------------------------------------------------------------------------

    -- Переливка в основную таблицу деталей ограничений.
    INSERT INTO dbd$constraint_details (
         constraint_id
        ,position
        ,field_id
    )
    SELECT
         con.id
        ,det.position
        ,fld.id
    FROM constraint_details AS det
    JOIN constraints        AS tmpcon
        ON det.constraint_id = tmpcon.id
    JOIN dbd$constraints    AS con
        ON tmpcon.uuid = con.uuid
    JOIN dbd$fields         AS fld
        ON  fld.name = det.field_name
        AND fld.table_id = con.table_id;

    --------------------------------------------------------------------------------------------------------------------
    
    -- Переливка в основную таблицу деталей индексов.
    INSERT INTO dbd$index_details (
         index_id 
        ,position 
        ,field_id 
        ,expression
        ,descend
    )
    SELECT    
         ind.id
        ,det.position
        ,fld.id
        ,det.expression
        ,det.descend
    FROM index_details AS det
    JOIN indices       AS tmpind
        ON det.index_id = tmpind.id
    JOIN dbd$indices   AS ind 
        ON tmpind.uuid = ind.uuid
    JOIN dbd$fields    AS fld
        ON  fld.name = det.field_name
        AND fld.table_id = ind.table_id;

    --------------------------------------------------------------------------------------------------------------------

    -- Удаление временных таблиц.
    DROP TABLE schemas;
    DROP TABLE domains;
    DROP TABLE tables;
    DROP TABLE fields;
    DROP TABLE constraints;
    DROP TABLE constraint_details;
    DROP TABLE indices;
    DROP TABLE index_details;

    --------------------------------------------------------------------------------------------------------------------
    COMMIT;

########################################################################################################################

[DOWNLOADING]

########################################################################################################################

# Запрос для загрузки данных из основного источника схем.
schema:
    SELECT
         sch.id
        ,sch.name
        ,sch.fulltext_engine
        ,sch.version
        ,sch.description
    FROM dbd$schemas AS sch
    ORDER BY sch.id

########################################################################################################################

# Запрос для загрузки данных из основного источника доменов.
domain :
    SELECT
         dom.id
        ,dom.name
        ,dom.description
        ,type.type_id    AS data_type_name
        ,dom.length
        ,dom.char_length
        ,dom.precision
        ,dom.scale
        ,dom.width
        ,dom.align
        ,dom.show_null
        ,dom.show_lead_nulls
        ,dom.thousands_separator
        ,dom.summable
        ,dom.case_sensitive
    FROM dbd$domains    AS dom
    JOIN dbd$data_types AS type
        ON dom.data_type_id = type.id

########################################################################################################################

# Запрос для загрузки данных из основного источника таблиц.
table :
    SELECT
         tab.id
        ,tab.schema_id
        ,tab.name
        ,tab.description
        ,tab.can_add
        ,tab.can_edit
        ,tab.can_delete
        ,tab.temporal_mode
        ,tab.means
    FROM dbd$tables  AS tab


########################################################################################################################

# Запрос для загрузки данных из основного источника полей.
field :
    SELECT
         field.id
        ,field.table_id
        ,field.name
        ,field.russian_short_name
        ,field.description
        ,dom.name                  AS domain_name
        ,field.can_input
        ,field.can_edit
        ,field.show_in_grid
        ,field.show_in_details
        ,field.is_mean
        ,field.autocalculated
        ,field.required
    FROM dbd$fields  AS field
    JOIN dbd$domains AS dom
        ON field.domain_id = dom.id
    ORDER BY field.position

########################################################################################################################

# Запрос для загрузки данных из основного источника ограничений.
constraint:
    SELECT
         con.id
        ,con.table_id
        ,con.name
        ,con.constraint_type
        ,ref.name                AS reference
        ,key.name                AS unique_key_id
        ,con.has_value_edit
        ,con.cascading_delete
        ,con.expression
    FROM dbd$constraints      AS con
    LEFT JOIN dbd$constraints AS key
        ON con.unique_key_id = key.id
    LEFT JOIN dbd$tables      AS ref
        ON con.reference = ref.id

########################################################################################################################

# Запрос для загрузки данных из основного источника деталей ограничений.
constraint_detail:
    SELECT
         detail.id
        ,detail.constraint_id
        ,field.name           AS field_name
    FROM dbd$constraint_details AS detail
    JOIN dbd$fields             AS field
        ON detail.field_id = field.id
    ORDER BY detail.position

########################################################################################################################

# Запрос для загрузки данных из основного источника индексов.
index:
    SELECT
         ind.id
        ,ind.table_id
        ,ind.name
        ,ind.local
        ,ind.kind
    FROM dbd$indices AS ind

########################################################################################################################

# Запрос для загрузки данных из основного источника деталей индексов.
index_detail:
    SELECT
         detail.id
        ,detail.index_id
        ,field.name        AS field_name
        ,detail.expression
        ,detail.descend
    FROM dbd$index_details AS detail
    JOIN dbd$fields        AS field
        ON detail.field_id = field.id
    ORDER BY detail.position

########################################################################################################################
